generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model OTP {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  phoneNumber String   @unique
  otpCode     String
  expiry      DateTime
}

model User {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  email       String     @unique
  phoneNumber String     @unique
  password    String
  role        UserRole
  status      UserStatus @default(ACTIVE)
  isDeleted   Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  customer    Customer?
  admin       Admin?
  rider       Rider?

  @@map("Users")
}

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  userName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [email], references: [email])

  @@map("Admins")
}

model Rider {
  id                  String             @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  email               String             @unique
  userName            String?
  profileImage        String?
  drivingLicenseImage String?
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  user                User               @relation(fields: [email], references: [email])
  riderVehicleInfo    RiderVehicleInfo[]

  @@map("Riders")
}

model Customer {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  userName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [email], references: [email])

  @@map("Customers")
}

model RiderVehicleInfo {
  id                        String @id @default(auto()) @map("_id") @db.ObjectId
  vehicleMake               String
  vehicleModel              String
  vehicleYear               String
  vehicleColor              String
  vehicleLicensePlateNumber String
  vehicleRegistrationImage  Json
  vehicleInsuranceImage     Json
  riderId                   String @db.ObjectId
  rider                     Rider  @relation(fields: [riderId], references: [id])

  @@map("RiderVehicleInfos")
}

model Offer {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  subTitle String
  image    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  ADMIN
  RIDER
  USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCKED
}
